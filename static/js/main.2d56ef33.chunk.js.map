{"version":3,"sources":["components/ClassicFormElement.js","components/DropDownList.js","components/formData.js","layouts/Form.js","components/SingleOrder.js","layouts/OrdersList.js","layouts/App.js","index.js"],"names":["ClassicFormElement","props","formikprops","handleChange","handleBlur","errors","touched","name","value","valueName","type","htmlFor","style","display","id","placeholder","onChange","onBlur","className","DropDownList","data","width","height","label","map","option","key","defaultOrders","medicine","time","date","amount","department","userData","surname","pin","departments","listOfMedicines","times","validationSchema","Yup","shape","firstName","required","lastName","integer","positive","max","Form","textAlign","color","initialValues","onSubmit","values","actions","a","resetForm","handleAddOrder","Promise","resolve","setTimeout","alert","dirty","isSubmitting","handleSubmit","handleReset","deparment","onClick","disabled","SingleOrder","order","backgroundColor","border","borderRadius","handleDeleteOrder","fontSize","OrdersList","orders","length","App","useState","setOrders","ordersWithoutThatOne","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d56ef33.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ClassicFormElement = (props) => {\r\n  const { handleChange, handleBlur, errors, touched } = props.formikprops;\r\n  const { name, value, valueName, type } = props;\r\n  return (\r\n    <div>\r\n      <label htmlFor={valueName} style={{ display: \"block\" }}>\r\n        {name}\r\n      </label>\r\n      <input\r\n        id={valueName}\r\n        placeholder={`Enter ${name}`}\r\n        type={type}\r\n        value={value}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        className={\r\n          errors[valueName] && touched[valueName]\r\n            ? \"text-input error\"\r\n            : \"text-input\"\r\n        }\r\n      />\r\n      <div className=\"input-feedback\">\r\n        {errors[valueName] && touched[valueName] && errors[valueName]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassicFormElement;\r\n","import React from \"react\";\r\n\r\nconst DropDownList = (props) => {\r\n  const { handleChange, handleBlur, errors, touched } = props.formikprops;\r\n  const { value, valueName, name, data } = props;\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor={valueName} style={{ display: \"block\" }}>\r\n        {name}\r\n      </label>\r\n      <select\r\n        name={valueName}\r\n        value={value}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        style={{ display: \"block\", width: \"95%\", height: \"50px\" }}\r\n      >\r\n        <option value=\"\" label={`Select a ${name}`} />\r\n        {data.map((option) => (\r\n          <option key={option.id} value={option.value} label={option.value} />\r\n        ))}\r\n      </select>\r\n      <div className=\"input-feedback\">\r\n        {errors[valueName] && touched[valueName] && errors[valueName]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDownList;\r\n","const defaultOrders = [\r\n  {\r\n    id: 1,\r\n    medicine: \"Vyvanse\",\r\n    time: \"8:00\",\r\n    date: \"2020-06-26\",\r\n    amount: \"5\",\r\n    department: \"Anaesthesiology and Adult Intensive Care\",\r\n    userData: {\r\n      name: \"Marcin\",\r\n      surname: \"Mazur\",\r\n      pin: \"7676\",\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    medicine: \"Crstor\",\r\n    time: \"22:00\",\r\n    date: \"2020-07-16\",\r\n    amount: \"10\",\r\n    department: \"General and Vascular Surgical\",\r\n    userData: {\r\n      name: \"Szewczyk\",\r\n      surname: \"Dratewka\",\r\n      pin: \"5454\",\r\n    },\r\n  },\r\n];\r\n\r\nconst departments = [\r\n  {\r\n    id: 1,\r\n    value: \"Anaesthesiology and Adult Intensive Care\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Anesthesiology and Child Intensive Care and Neonathology\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"Child Surgical\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"General and Vascular Surgical\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"Casualty and Orthopaedic Surgical\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"Dermatology\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"Day Reahabilitation\",\r\n  },\r\n];\r\n\r\nconst listOfMedicines = [\r\n  {\r\n    id: 1,\r\n    value: \"Synthroid\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Crestor\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"Ventolin\",\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"Nexium\",\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"Advair Diskus\",\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"Lantus Solostar\",\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"Vyvanse\",\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"Ativan\",\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"Spiriva\",\r\n  },\r\n  {\r\n    id: 10,\r\n    value: \"Januvia\",\r\n  },\r\n];\r\n\r\nconst times = [\r\n  {\r\n    id: 1,\r\n    value: \"8:00\",\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"15:00\",\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"22:00\",\r\n  },\r\n];\r\n\r\nexport { defaultOrders, listOfMedicines, departments, times };\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport ClassicFormElement from \"../components/ClassicFormElement\";\r\nimport DropDownList from \"../components/DropDownList\";\r\nimport { departments, times, listOfMedicines } from \"../components/formData\";\r\nimport * as Yup from \"yup\";\r\nimport \"../styles/Form.css\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(),\r\n  lastName: Yup.string().required(),\r\n  pin: Yup.number()\r\n    .required()\r\n    .integer()\r\n    .positive()\r\n    .max(999999, \"PESEL can have just 6 numbers.\"),\r\n  medicine: Yup.string().required(),\r\n  amount: Yup.number()\r\n    .required()\r\n    .max(500, \"We know that is a good stuff, but slow down cowboy.\")\r\n    .integer()\r\n    .positive(),\r\n  date: Yup.date().required(),\r\n  department: Yup.string().required(),\r\n  time: Yup.string().required(),\r\n});\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <h1 style={{ textAlign: \"center\", color: \"white\" }}>\r\n        Medicines Order Form\r\n      </h1>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          pin: \"\",\r\n          medicine: \"\",\r\n          time: \"\",\r\n          date: \"\",\r\n          amount: \"\",\r\n          department: \"\",\r\n        }}\r\n        onSubmit={async (values, actions) => {\r\n          actions.resetForm();\r\n          props.handleAddOrder(values);\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          alert(\"Order added successfully!\");\r\n        }}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formikprops) => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            dirty,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            handleReset,\r\n          } = formikprops;\r\n          return (\r\n            <form onSubmit={handleSubmit} className=\"main-formik\">\r\n              <div className=\"formik-Container \">\r\n                <ClassicFormElement\r\n                  formikprops={formikprops}\r\n                  value={values.firstName}\r\n                  valueName={\"firstName\"}\r\n                  name=\"Patient's First Name\"\r\n                  type=\"text\"\r\n                />\r\n                <ClassicFormElement\r\n                  formikprops={formikprops}\r\n                  value={values.lastName}\r\n                  valueName={\"lastName\"}\r\n                  name=\"Patient's Surname\"\r\n                  type=\"text\"\r\n                />\r\n                <ClassicFormElement\r\n                  formikprops={formikprops}\r\n                  value={values.pin}\r\n                  valueName={\"pin\"}\r\n                  name=\"Patient's ID\"\r\n                  type=\"number\"\r\n                />\r\n                <DropDownList\r\n                  formikprops={formikprops}\r\n                  value={values.deparment}\r\n                  valueName=\"department\"\r\n                  name=\"Department Of Delivery\"\r\n                  data={departments}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"outline\"\r\n                  onClick={handleReset}\r\n                  disabled={!dirty || isSubmitting}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <div className=\"formik-Container \">\r\n                <DropDownList\r\n                  formikprops={formikprops}\r\n                  value={values.medicine}\r\n                  valueName=\"medicine\"\r\n                  name=\"Medicine\"\r\n                  data={listOfMedicines}\r\n                />\r\n                <ClassicFormElement\r\n                  formikprops={formikprops}\r\n                  value={values.amount}\r\n                  valueName={\"amount\"}\r\n                  name=\"Amount of Medicine (Pills)\"\r\n                  type=\"number\"\r\n                />\r\n                <label htmlFor=\"date\" style={{ display: \"block\" }}>\r\n                  Date of Medicine Injection\r\n                </label>\r\n                <input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  value={values.date}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.date && touched.date\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                <div className=\"input-feedback\">\r\n                  {errors.date && touched.date && errors.date}\r\n                </div>\r\n                <DropDownList\r\n                  formikprops={formikprops}\r\n                  value={values.time}\r\n                  valueName=\"time\"\r\n                  name=\"Time of Medicine Injection\"\r\n                  data={times}\r\n                />\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"../styles/List.css\";\r\nconst SingleOrder = (props) => {\r\n  const {\r\n    id,\r\n    medicine,\r\n    time,\r\n    date,\r\n    amount,\r\n    department,\r\n    userData,\r\n  } = props.order;\r\n  return (\r\n    <div>\r\n      <div className=\"grid-container\">\r\n        <div className=\"user-cont\">\r\n          Name: <strong>{userData.name}</strong> <br />\r\n          Surname: <strong>{userData.surname} </strong>\r\n          <br />\r\n          Patient's ID: <strong>{userData.pin}</strong>\r\n        </div>\r\n        <div>\r\n          Medicine: <strong> {medicine} </strong>\r\n        </div>\r\n        <div>\r\n          Date: <strong>{date}</strong>\r\n        </div>\r\n        <button\r\n          className=\"cancel-Col\"\r\n          style={{\r\n            backgroundColor: \"#CD5C5C\",\r\n            color: \"#404040\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n          }}\r\n          onClick={() => props.handleDeleteOrder(id)}\r\n        >\r\n          <i className=\"fa fa-trash\" style={{ fontSize: \"50px\" }} />\r\n        </button>\r\n\r\n        <div className=\"dep-Col \">\r\n          Department: <br /> <strong>{department}</strong>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          Amount: <strong>{amount}</strong>\r\n        </div>\r\n        <div>\r\n          Time: <strong>{time}</strong>\r\n        </div>\r\n        <button\r\n          className=\"cancel-media\"\r\n          style={{\r\n            backgroundColor: \"#CD5C5C\",\r\n            color: \"#404040\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            width: \"100%\",\r\n          }}\r\n          onClick={() => props.handleDeleteOrder(id)}\r\n        >\r\n          <i className=\"fa fa-trash\" style={{ fontSize: \"50px\" }} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleOrder;\r\n","import React from \"react\";\r\nimport SingleOrder from \"../components/SingleOrder\";\r\nimport \"../styles/List.css\";\r\n\r\nconst OrdersList = (props) => {\r\n  return (\r\n    <div className=\"listContainer\">\r\n      <h1 style={{ textAlign: \"center\", color: \"white\" }}>Orders List</h1>\r\n      {props.orders.length ? (\r\n        props.orders.map((order) => (\r\n          <SingleOrder\r\n            key={order.id}\r\n            order={order}\r\n            handleDeleteOrder={props.handleDeleteOrder}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"empty-list\">\r\n          No orders to Display! Add the first one!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersList;\r\n","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport OrdersList from \"./OrdersList\";\nimport \"../styles/App.css\";\nimport { defaultOrders } from \"../components/formData\";\n\nconst App = () => {\n  const [orders, setOrders] = useState(defaultOrders);\n\n  const handleAddOrder = (values) => {\n    const order = {\n      id: orders.length + 1,\n      medicine: values.medicine,\n      time: values.time,\n      date: values.date,\n      amount: values.amount,\n      department: values.department,\n      userData: {\n        name: values.firstName,\n        surname: values.lastName,\n        pin: values.pin,\n      },\n    };\n    setOrders([...orders, order]);\n  };\n\n  const handleDeleteOrder = (id) => {\n    let ordersWithoutThatOne = orders.filter((order) => order.id !== id);\n    setOrders(ordersWithoutThatOne);\n  };\n\n  return (\n    <div>\n      <Form handleAddOrder={handleAddOrder} />\n      <OrdersList orders={orders} handleDeleteOrder={handleDeleteOrder} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./layouts/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}